-- sql pizza sales project

-- question 1 Retrirve the total number of orders placed..

-- question.2 Calculated total revnu pizza sales--

-- identityfi the most common pizza size ordered
 
-- Question 5. List the top 5 most ordered pizza types along with quantites.

-- intermediate lavel questions----

-- Question 1. join thenecessary tables to the total quantity each pizza_category_orders

-- Question 2.  Determine the Distributition of orders by the hours.

-- Question 3. join relevent tables to find the category wise distribution of pizzas

-- q.4. group the orders by date and calculated 
-- the average number of pizzas orderd per day

-- Advance query--

-- Calculate the percentage contribution of each
-- pizza type to total revenue.

-- Analyze the cumlative revenue generated over time.

-- Detemine the top 3 most ordered pizza types based on revenue for 
-- each pizza category.



-- Basic Queries
 
-- 1. List all unique cities where customers are located.
-- 2. Count the number of orders placed in 2017.

-- 3. Find the total sales per category.

-- 4. Calculate the percentage of orders that were paid in installments.
-- 5. Count the number of customers from each state. 

-- Intermediate Queries
-- 1. Calculate the number of orders per month in 2018.
-- 2. Find the average number of products per order, grouped by customer city.
-- 3. Calculate the percentage of total revenue contributed by each product category.
-- 4. Identify the correlation between product price and the number of times a product has been purchased.
-- 5. Calculate the total revenue generated by each seller, and rank them by revenue.

-- Advanced Queries
-- 1. Calculate the moving average of order values for each customer over their order history.
-- 2. Calculate the cumulative sales per month for each year.
-- 3. Calculate the year-over-year growth rate of total sales.
-- 4. Calculate the retention rate of customers, defined as the percentage of customers who make another purchase within 6 months of their first purchase.
-- 5. Identify the top 3 customers who spent the most money in each year.


-- Basic SELECT Queries:

-- Write a query to select all columns from the employees table.

-- Filtering Data:

-- Write a query to find employees who work in the 'Sales' department.

-- Sorting Data:

-- Write a query to list products in ascending order of price.

-- String Functions:

-- Write a query to extract the first 4 characters of the employee_name.

-- Date Functions:

-- Write a query to find all orders placed in the current year.

-- Arithmetic Operations:

-- Write a query to calculate the total cost of each product by multiplying price and quantity.

-- Aggregate Functions:

-- Group By:

-- Write a query to find the number of employees in each department.

-- Joins:

-- Write a query to join the employees and departments 
-- tables to show employee names and their department names.

-- Conditional Statements:

-- Write a query to find all customers who have made more than 3 purchases.

-- Intermediate Questions:
-- Subqueries:

-- Write a query to find products with prices higher than the average price.

-- Having Clause:

-- Write a query to find departments with more than 10 employees.

-- Case Statements:

-- Write a query to categorize employees based on their salary ranges.

-- Joins with Multiple Conditions:

-- Write a query to find orders made by customers from 'New York'.

-- Window Functions:

-- Write a query to calculate the running total of sales for each month.

-- CTEs (Common Table Expressions):

-- Write a query to find the top 3 employees with the highest sales in each department.

-- Null Handling:

-- Write a query to find all orders that do not have a shipping date.

-- Advanced Group By:

-- Write a query to find the total sales for each product category, ordered by total sales.

-- String Matching:

-- Write a query to find all customers whose names contain 'Smith'.

-- Date and Time Manipulation:

-- Write a query to calculate the age of each employee based on their birth date.

-- Advanced Questions:
-- Recursive CTEs:

-- Write a query to generate a sequence of numbers from 1 to 100.

-- Advanced Window Functions:

-- Write a query to calculate the moving average of sales over a 7-day period.

-- Complex Joins:

-- Write a query to find the top 5 products with the highest total revenue.

-- Dynamic SQL:

-- Write a stored procedure that takes a table name and returns the count of rows.

-- Stored Procedures:

-- Write a procedure to update the stock level for a product based on new shipments.

-- Triggers:

-- Write a trigger to log changes to the employees table whenever an employeeâ€™s salary is updated.

-- Views:

-- Create a view to show the total sales by customer.

-- Index Usage:

-- Write a query to show all indexes on the orders table and explain their usage.

-- Optimization Techniques:

-- Write and optimize a query to improve performance for a report that shows sales by region.

-- Handling Large Datasets:

-- Write a query to partition a large dataset and analyze the performance improvements.

-- Specialized Topics:
-- Temporal Tables:

-- Write a query to retrieve data from a temporal table as of a specific point in time.

-- Data Warehousing:

-- Design a star schema for a data warehouse based on sales data.

-- Replication:

-- Set up and write queries to test replication between primary and replica databases.

-- Sharding:

-- Demonstrate how to distribute data across multiple databases using sharding.

-- Backup and Recovery:

-- Write scripts to automate the backup and recovery processes for a database.

-- Advanced Security:

-- Write queries to grant and revoke privileges on database objects securely.

-- Big Data Integration:

-- Write queries to interface with Hadoop or other big data technologies for large-scale data processing.

-- Real-Time Data Processing:

-- Write queries to analyze real-time streaming data for quick insights.

-- Graph Data Analysis:

-- Write an SQL query to fetch all records from a table named Employees.

-- Write an SQL query to fetch the first 10 records from a table named Orders.

-- Write an SQL query to find the count of employees in a department named 'HR'.

-- Write an SQL query to find the average salary of employees in a table named Salaries.

-- Write an SQL query to fetch the maximum salary from a table named Salaries.

-- Write an SQL query to fetch employee names and their corresponding departments.

-- Write an SQL query to update the email address of an employee with EmployeeID = 5.

-- Write an SQL query to delete all employees with a salary less than 30000.

-- Write an SQL query to add a new column called PhoneNumber to a table named Employees.

-- Write an SQL query to create a table named Departments with columns DepartmentID and DepartmentName.

-- Intermediate SQL Questions:
-- Write an SQL query to fetch all employees who joined in the year 2020.

-- Write an SQL query to fetch the top 5 highest salaries from the Salaries table.

-- Write an SQL query to find the total number of orders placed by each customer in the Orders table.

-- Write an SQL query to find the employee with the second highest salary.

-- Write an SQL query to fetch employees whose names start with 'A'.

-- Write an SQL query to fetch employees who do not belong to the 'Sales' department.

-- Write an SQL query to fetch all records from the Orders table where the order date is between '2023-01-01' and '2023-12-31'.

-- Write an SQL query to fetch employees along with their manager's name from the Employees table.

-- Write an SQL query to find the minimum and maximum salary for each department.

-- Write an SQL query to fetch employees who have not placed any orders from the Employees and Orders tables.

-- Advanced SQL Questions:
-- Write an SQL query to fetch all orders placed in the last 30 days.

-- Write an SQL query to fetch the employee with the highest salary in each department.

-- Write an SQL query to update the salary of employees by 10% who have been with the company for more than 5 years.



-- Write an SQL query to fetch the top 3 departments with the highest average salary.

-- Write an SQL query to find the total sales for each product category from the Sales table.

-- Write an SQL query to fetch all customers who have made more than 5 purchases in the last month.

-- Write an SQL query to fetch the employee name and the number of orders they have processed from the Employees and Orders tables.

-- Write an SQL query to create a view that lists all employees with their department name and manager name.

-- Write an SQL query to fetch all employees who have been promoted in the last year








